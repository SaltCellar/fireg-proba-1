<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class board_post extends Model {
    use HasFactory;

    public function getLastMaintenances() : array {
        $result = [];

        foreach ( \App\Models\maintenance_type::all() ? : [] as $maintenanceType ) {
            $maintenance = \App\Models\maintenance::query()
                ->where('parent','=',$this->id)
                ->where('type','=',$maintenanceType->id)
                ->orderBy('date','DESC')
                ->first();

            if ($maintenance) {
                $maintenance = $maintenance->toArray();
                $result [ $maintenanceType->id ] = [
                    'id' => $maintenance['id'],
                    'date' => $maintenance['date'],
                    'comment' => $maintenance['comment'],
                ];
            } else {
                $result [ $maintenanceType->id ] = null;
            }
        }

        return $result;
    }

    public function toArray(bool $extends = true) : array {
        if ($extends) {
            $model = parent::toArray();

            $model = array_merge($model,[ 'maintenances' => $this->getLastMaintenances() ]);

            $model = \App\Helpers\Wrapper::modelArrayExtends([
                'board'                     => [ 'class' => \App\Models\board::class, 'extend' => ['id','name'], ],
                'extinguisher_type'         => [ 'class' => \App\Models\extinguisher_type::class, 'extend' => ['id','name'], ],
                'site'                      => [ 'class' => \App\Models\site::class, 'extend' => ['id','name'], ],
            ],$model);

            $model['fa_date'] = date('Y.m.d',strtotime($model['fa_date']));

            return $model;
        } else {
            return parent::toArray(); // TODO: Change the autogenerated stub
        }
    }

}
